// Generated by CoffeeScript 1.7.1
var admin, async, debug, express, globals, path, pg, postgrator, region, router;

path = require('path');

async = require('async');

express = require('express');

pg = require('pg');

router = express.Router();

globals = require('../globals');

debug = globals.debug;

region = require('../passport/region');

postgrator = require('postgrator');

postgrator.config.set({
  migrationDirectory: path.resolve(__dirname, '../../sql'),
  driver: postgrator.pg,
  connectionString: globals.config.pg_url
});

admin = require('../user/admin');

router.post('/reset', function(req, res, next) {
  postgrator.migrate('000', function(err, migrations) {
    if (err) {
      console.error(err);
      res.locals.error = err;
      next();
      return;
    }
    debug(migrations);
    postgrator.migrate('001', function(err, migrations) {
      if (err) {
        console.error(err);
        res.locals.error = err;
        next();
        return;
      }
      debug(migrations);
      res.locals.success = {
        message: "App was successfully reset"
      };
      next();
    });
  });
});

router.post('/pgo-management', function(req, res, next) {
  var GrantingOfficerEmail, Id, action;
  action = req.param('action');
  switch (action) {
    case 'setGrantingOfficerEmail':
      Id = req.param('Id');
      GrantingOfficerEmail = req.param('GrantingOfficerEmail');
      if (!/(\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,6})/.test(GrantingOfficerEmail)) {
        res.locals.error = new Error('Invalid email.');
        next();
        return;
      }
      region.setPGOForRegionId(Id, GrantingOfficerEmail, function(err, row) {
        if (err) {
          return next(err);
        }
        res.locals.success = {
          message: "Granting Officer's Email was successfully Authorize."
        };
        next();
      });
      break;
    case 'unsetGrantingOfficerEmail':
      Id = req.param('Id');
      region.unsetPGOForRegionId(Id, function(err, row) {
        if (err) {
          return next(err);
        }
        console.log(row);
        res.locals.success = {
          message: "Granting Officer's Email was successfully Unauthorize."
        };
        next();
      });
      break;
    default:
      res.locals.error = new Error('Invalid request.');
      next();
  }
});

router.all('/pgo-management', function(req, res, next) {
  region.getRegions(function(err, regions) {
    if (err) {
      return next(err);
    }
    res.locals.regions = regions;
    next();
  });
});

module.exports = router;
