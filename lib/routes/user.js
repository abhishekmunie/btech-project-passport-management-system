// Generated by CoffeeScript 1.7.1
var application, async, citizen, express, globals, region, router;

async = require('async');

express = require('express');

router = express.Router();

citizen = require('../user/citizen');

application = require('../passport/application');

region = require('../passport/region');

globals = require('../globals');

router.all('/profile', function(req, res, next) {
  res.locals.attr_list = citizen.attr_list;
  citizen.getForEmail(req.session.user.email, function(err, citizenData) {
    var attr, value;
    if (err) {
      return next(err);
    }
    citizen.expandValueUsingMap(citizenData);
    for (attr in citizenData) {
      value = citizenData[attr];
      if (value instanceof Date) {
        citizenData[attr] = value.toDateString();
      }
    }
    res.locals.citizen = citizenData;
    next();
  });
});

router.all('/status', function(req, res, next) {
  res.locals.attr_list = citizen.attr_list;
  application.getAllForEmail(req.session.user.email, function(err, allApplications) {
    if (err) {
      return next(err);
    }
    region.getRegions(function(err, regions) {
      var app, r, regionsMap, _i, _j, _len, _len1;
      if (err) {
        return next(err);
      }
      regionsMap = {};
      for (_i = 0, _len = regions.length; _i < _len; _i++) {
        r = regions[_i];
        regionsMap[r.Id] = r.Name;
      }
      for (_j = 0, _len1 = allApplications.length; _j < _len1; _j++) {
        app = allApplications[_j];
        application.expandValueUsingMap(app);
        app.Region = regionsMap[app.RegionId];
      }
      res.locals.applications = allApplications;
      next();
    });
  });
});

router.post('/application', function(req, res, next) {
  var newApplication;
  newApplication = new application.Application('req', req);
  application.addApplication(newApplication, function(err) {
    if (err) {
      res.locals.error = err;
      console.error(err);
      next();
      return;
    }
    res.locals.success = {
      message: 'You passport request has been successfully registered.'
    };
    next();
  });
  return;
  return next();
});

router.all('/application', function(req, res, next) {
  res.locals.attr_list = application.attr_list;
  region.getRegions(function(err, regions) {
    if (err) {
      return next(err);
    }
    res.locals.regions = regions;
    next();
  });
});

module.exports = router;
